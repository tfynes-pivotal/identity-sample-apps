<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	   xmlns:sec="http://www.springframework.org/schema/security"
	   xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-2.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<sec:http name="appFilterLoginError" pattern="/login_error.jsp" security="none" />

	<http name="appFilterDefault" xmlns="http://www.springframework.org/schema/security" entry-point-ref="loginEntryPoint"
		  disable-url-rewriting="true" use-expressions="true" authentication-manager-ref="authenticationManager"
		  security-context-repository-ref="securityContextRepository">
		<intercept-url pattern="/**" access="isFullyAuthenticated()" />
		<logout logout-success-url="/logout" />
		<anonymous enabled="false" />
		<custom-filter ref="oauth2ClientFilter" before="PRE_AUTH_FILTER" />
		<custom-filter ref="accessTokenFilter" position="PRE_AUTH_FILTER" />
		<csrf disabled="true"/>
	</http>

	<bean id="securityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository">
		<property name="springSecurityContextKey" value="SOCIAL_SPRING_SECURITY_CONTEXT" />
	</bean>

	<sec:authentication-manager alias="authenticationManager" />

	<bean id="oauth2AuthenticationManager" class="org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationManager">
		<property name="tokenServices" ref="remoteTokenServices" />
	</bean>

	<bean id="remoteTokenServices" class="org.springframework.security.oauth2.provider.token.RemoteTokenServices" depends-on="ssoServiceCreatorInitializer">
		<property name="checkTokenEndpointUrl" value='#{@environment.getProperty("tokenInfoUri")}' />
		<property name="clientId" value='#{@environment.getProperty("clientId")}' />
		<property name="clientSecret" value='#{@environment.getProperty("clientSecret")}' />
	</bean>

	<bean id="cloudFactory" class="org.springframework.cloud.CloudFactory" />

	<bean id="loginEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<constructor-arg value="/login_error.jsp" />
	</bean>

	<!--apply the oauth client context -->
	<oauth:client id="oauth2ClientFilter" />

	<bean id="accessTokenFilter" class="ClientAuthenticationFilter">
		<constructor-arg value="/login" />
		<property name="authenticationManager" ref="oauth2AuthenticationManager" />
 		<property name="preAuthenticatedPrincipalSource">
			<bean class="OAuth2AccessTokenSource">
				<property name="restTemplate" ref="restTemplate" />
			</bean>
		</property>
	</bean>

	<bean id="ssoServiceCreatorInitializer" class="SsoServiceInfoCreatorInitializer">
		<constructor-arg name="cloudFactory" ref="cloudFactory" />
		<constructor-arg name="environment" ref="environment" />
	</bean>

	<mvc:annotation-driven />

	<mvc:default-servlet-handler />

	<bean id="viewResolver" class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="defaultViews">
			<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="homeController" class="org.cloudfoundry.identity.app.web.HomeController" />

	<oauth:rest-template id="restTemplate" resource="authorizationCodeDetails" />

	<!--define an oauth 2 resource for api access -->
	<bean id="authorizationCodeDetails" class="org.springframework.security.oauth2.client.token.grant.code.AuthorizationCodeResourceDetails" depends-on="ssoServiceCreatorInitializer">
		<property name="accessTokenUri" value='#{@environment.getProperty("accessTokenUri")}'/>
		<property name="userAuthorizationUri" value='#{@environment.getProperty("userAuthorizationUri")}'/>
		<property name="clientId" value='#{@environment.getProperty("clientId")}'/>
		<property name="clientSecret" value='#{@environment.getProperty("clientSecret")}'/>
	</bean>

	<oauth:web-expression-handler id="oauthWebExpressionHandler" />

</beans>
